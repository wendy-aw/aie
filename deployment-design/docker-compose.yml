services:
  elasticsearch-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: es-node1
    environment:
      - node.name=es-node1
      - cluster.name=elastic-cluster
      - discovery.seed_hosts=es-node2
      - cluster.initial_master_nodes=es-node1,es-node2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=http://${HOST_IP:-localhost}:3000
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,x-elastic-client-meta
      - http.cors.allow-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 12
      start_period: 60s
    restart: unless-stopped

  elasticsearch-node2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: es-node2
    environment:
      - node.name=es-node2
      - cluster.name=elastic-cluster
      - discovery.seed_hosts=es-node1
      - cluster.initial_master_nodes=es-node1,es-node2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=http://${HOST_IP:-localhost}:3000
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,x-elastic-client-meta
      - http.cors.allow-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data2:/usr/share/elasticsearch/data
    networks:
      - elastic
    restart: unless-stopped

  elastic-backend:
    build:
      context: ./elastic-backend
      dockerfile: Dockerfile.elastic-backend
    container_name: elastic-backend
    environment:
      - ELASTICSEARCH_HOST=es-node1
      - CSV_SOURCE_URL=${CSV_SOURCE_URL:-}
    depends_on:
      elasticsearch-node1:
        condition: service_healthy
      elasticsearch-node2:
        condition: service_started
    networks:
      - elastic
    restart: "no"

  search-ui:
    build:
      context: ./search-ui
      dockerfile: Dockerfile.search-ui
    container_name: search-ui
    ports:
      - "3000:80"
    environment:
      - REACT_APP_ELASTICSEARCH_HOST_URL=http://${HOST_IP:-localhost}:9200
    depends_on:
      - elasticsearch-node1
      - elasticsearch-node2
      - elastic-backend
    networks:
      - elastic
    restart: unless-stopped

volumes:
  es-data1:
    driver: local
  es-data2:
    driver: local

networks:
  elastic:
    driver: bridge